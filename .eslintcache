[{"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/App.tsx":"1","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/redux/store.ts":"2","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/redux/reducer.ts":"3","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/index.tsx":"4","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/data.ts":"5","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/globalStyles.tsx":"6","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/reportWebVitals.ts":"7","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/BoardContainer.tsx":"8","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/Card/index.tsx":"9","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/CustomDragLayer.tsx":"10","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/Card/DragCard.tsx":"11","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/Column/DragColumn.tsx":"12"},{"size":2100,"mtime":1612993176652,"results":"13","hashOfConfig":"14"},{"size":311,"mtime":1611614113299,"results":"15","hashOfConfig":"16"},{"size":4251,"mtime":1612728980421,"results":"17","hashOfConfig":"16"},{"size":764,"mtime":1611696849803,"results":"18","hashOfConfig":"16"},{"size":808,"mtime":1612645877274,"results":"19","hashOfConfig":"16"},{"size":185,"mtime":1611505999702,"results":"20","hashOfConfig":"16"},{"size":425,"mtime":1611503931791,"results":"21","hashOfConfig":"14"},{"size":304,"mtime":1612991817084,"results":"22","hashOfConfig":"14"},{"size":443,"mtime":1612716436264,"results":"23","hashOfConfig":"14"},{"size":2452,"mtime":1612994039255,"results":"24","hashOfConfig":"14"},{"size":2108,"mtime":1612994170871,"results":"25","hashOfConfig":"14"},{"size":1985,"mtime":1612994097999,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"d46xk5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"1k0k5sp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/App.tsx",["55","56","57","58","59","60"],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/redux/store.ts",["61"],"import {combineReducers, createStore} from 'redux'\nimport { addItemReducer } from './reducer'\nimport {AddItemState} from './reducer'\n\nconst rootReducer = combineReducers({\n    addItem: addItemReducer\n})\n\nexport type RootReducerType = ReturnType<typeof rootReducer>\n\nexport const store = createStore(rootReducer)",["62","63"],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/redux/reducer.ts",[],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/index.tsx",[],["64","65"],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/data.ts",[],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/globalStyles.tsx",[],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/reportWebVitals.ts",[],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/BoardContainer.tsx",[],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/Card/index.tsx",[],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/CustomDragLayer.tsx",["66","67","68","69","70","71","72","73"],"import React, { useCallback, useMemo } from 'react'\nimport { DragLayer, DragLayerMonitor, useDragLayer, XYCoord } from 'react-dnd'\nimport styled from 'styled-components'\nimport AddNewItem from './AddNewItem'\nimport Card from './Card'\nimport Column from './Column'\nimport { ColumnContainer, ColumnTitle } from './Column/ColumnElements'\nimport {Task} from '../redux/reducer'\nconst DragLayerContainer = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    /* transform: rotateZ('100deg'); */\n    pointer-events: none;\n`\n\n\n\n  const getItemStyles = (currentOffset: XYCoord | null) => {\n    if (!currentOffset) {\n        return {\n            display: \"none\"\n        }\n    }\n\n    const {x,y} = currentOffset\n    // console.log(x, y);\n    const transform = `translate(${x}px, ${y}px)`\n    return {\n        transform,\n        WebkitTransform: transform\n    }\n}\n\nexport const CustomDragLayer = () => {\n    const {isDragging, item, currentOffset} = useDragLayer(monitor => ({\n        item: monitor.getItem(),\n        currentOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging()\n    }))\n\n    // console.log(item)\n\n    const renderItem = (item: any) => {\n        // console.log(item);\n\n        switch(item.type){\n            case 'COLUMN':\n                return (\n                    <Column\n                        id={item.id}\n                        title={item.title}\n                        tasks={item.tasks}\n                        onAdd={() => {}}\n                        isDragging={isDragging}\n                    />\n                )\n            case 'CARD':\n                return (\n                    <Card \n                        id={item.id}\n                        text={item.text}\n                        columnId={item.columnId}\n                    />\n                )\n        }\n    }\n    return (\n        isDragging \n            ?   <DragLayerContainer >\n                    <div style={getItemStyles(currentOffset)}>\n                        {renderItem(item)}\n                    </div>\n                </DragLayerContainer> \n            : null\n    )\n\n}\n\n\n\n// function collect(monitor: DragLayerMonitor) {\n//     return {\n//       item: monitor.getItem(),\n//       itemType: monitor.getItemType(),\n//       currentOffset: monitor.getSourceClientOffset(),\n//       isDragging: monitor.isDragging()\n//     }\n//   }  \n\n\nexport default CustomDragLayer\n","/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/Card/DragCard.tsx",["74","75","76","77"],"/home/nikita/Projects/ReactProjects/TSProjects/my-trello/src/shared/Column/DragColumn.tsx",["78","79","80","81"],{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"86","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":5,"column":10,"nodeType":"84","messageId":"85","endLine":5,"endColumn":14},{"ruleId":"82","severity":1,"message":"88","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":22},{"ruleId":"82","severity":1,"message":"89","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":17},{"ruleId":"82","severity":1,"message":"90","line":30,"column":9,"nodeType":"84","messageId":"85","endLine":30,"endColumn":12},{"ruleId":"82","severity":1,"message":"88","line":3,"column":9,"nodeType":"84","messageId":"85","endLine":3,"endColumn":21},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"82","severity":1,"message":"97","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":28},{"ruleId":"82","severity":1,"message":"98","line":1,"column":30,"nodeType":"84","messageId":"85","endLine":1,"endColumn":37},{"ruleId":"82","severity":1,"message":"99","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"100","line":2,"column":21,"nodeType":"84","messageId":"85","endLine":2,"endColumn":37},{"ruleId":"82","severity":1,"message":"101","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"102","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":25},{"ruleId":"82","severity":1,"message":"103","line":7,"column":27,"nodeType":"84","messageId":"85","endLine":7,"endColumn":38},{"ruleId":"82","severity":1,"message":"104","line":8,"column":9,"nodeType":"84","messageId":"85","endLine":8,"endColumn":13},{"ruleId":"82","severity":1,"message":"105","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":23},{"ruleId":"82","severity":1,"message":"106","line":16,"column":13,"nodeType":"84","messageId":"85","endLine":16,"endColumn":23},{"ruleId":"82","severity":1,"message":"107","line":24,"column":13,"nodeType":"84","messageId":"85","endLine":24,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":53,"column":8,"nodeType":"110","endLine":53,"endColumn":10,"suggestions":"111"},{"ruleId":"82","severity":1,"message":"112","line":10,"column":7,"nodeType":"84","messageId":"85","endLine":10,"endColumn":20},{"ruleId":"82","severity":1,"message":"106","line":23,"column":13,"nodeType":"84","messageId":"85","endLine":23,"endColumn":23},{"ruleId":"82","severity":1,"message":"107","line":31,"column":13,"nodeType":"84","messageId":"85","endLine":31,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":55,"column":8,"nodeType":"110","endLine":55,"endColumn":10,"suggestions":"113"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Column' is defined but never used.","'data' is defined but never used.","'AddItemState' is defined but never used.","'useDrop' is defined but never used.","'ref' is assigned a value but never used.","no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],"'useCallback' is defined but never used.","'useMemo' is defined but never used.","'DragLayer' is defined but never used.","'DragLayerMonitor' is defined but never used.","'AddNewItem' is defined but never used.","'ColumnContainer' is defined but never used.","'ColumnTitle' is defined but never used.","'Task' is defined but never used.","'CardContainer' is defined but never used.","'isDragging' is assigned a value but never used.","'isOver' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'ColumnWrapper' is assigned a value but never used.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},"Update the dependencies array to be: [preview]",{"range":"121","text":"122"},{"range":"123","text":"122"},[1885,1887],"[preview]",[1703,1705]]
